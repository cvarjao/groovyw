#!/usr/bin/env sh

##############################################################################
##
##  Groovy start up script for UN*X
##
##############################################################################
# Based on Gradlew - https://github.com/gradle/gradle/blob/master/gradlew

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="Groovy"
APP_BASE_NAME=`basename "$0"`

#echo "PRG:${PRG}"
#echo "APP_HOME:${APP_HOME}"
#echo "APP_NAME:${APP_NAME}"
#echo "APP_BASE_NAME:${APP_BASE_NAME}"

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS="-Xmx128m -Dfile.encoding=UTF-8"

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac


if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JDK_DIR="${APP_HOME}/.jdk"
    #echo "cygwin:${cygwin}, darwin:${darwin}, msys:${msys}, nonstop:${nonstop}"
    if $darwin; then
        JDK_DOWNLOAD_URL='https://download.java.net/java/GA/jdk10/10.0.2/19aef61b38124481863b1413dce1855f/13/openjdk-10.0.2_osx-x64_bin.tar.gz'
    else
        JDK_DOWNLOAD_URL='https://download.java.net/java/GA/jdk10/10.0.2/19aef61b38124481863b1413dce1855f/13/openjdk-10.0.2_linux-x64_bin.tar.gz'
    fi
    JDK_DOWNLOAD_URL_SHA256="${JDK_DOWNLOAD_URL}.sha256"
    JDK_DOWNLOAD_FILE="~`basename "$JDK_DOWNLOAD_URL"`"
    JDK_DOWNLOAD_FILE_SHA256="~${JDK_DOWNLOAD_FILE}.sha256"

    curl -sL -o "${JDK_DOWNLOAD_FILE_SHA256}" "${JDK_DOWNLOAD_URL_SHA256}"
    echo "`cat "${JDK_DOWNLOAD_FILE_SHA256}"`  ${JDK_DOWNLOAD_FILE}" > "${JDK_DOWNLOAD_FILE}.checksum"

    shasum -a 256 -c -s "${JDK_DOWNLOAD_FILE}.checksum" || ( rm -f "${JDK_DOWNLOAD_FILE}"; rm -rf "${JDK_DIR}")

    if [ ! -f "${JDK_DOWNLOAD_FILE}" ] ; then
        echo "Downloading JDK"
        curl -sL -o "${JDK_DOWNLOAD_FILE}" "${JDK_DOWNLOAD_URL}"
    fi
    
    if [ ! -d "${JDK_DIR}" ] ; then
        echo "Extracting JDK"
        mkdir -p "${JDK_DIR}"
        tar -xzf "${JDK_DOWNLOAD_FILE}" -C "${JDK_DIR}"
    fi
    JAVACMD="`find "${JDK_DIR}/" -type f -name 'java' -perm +111`"
fi

GROOVY_DOWNLOAD_URL='https://dl.bintray.com/groovy/maven/apache-groovy-binary-2.5.2.zip'
GROOVY_DOWNLOAD_FILE="~`basename "$GROOVY_DOWNLOAD_URL"`"

GROOVY_DIR="${APP_HOME}/.groovy"
if [ ! -d "${GROOVY_DIR}" ] ; then
    if [ ! -f "${GROOVY_DOWNLOAD_FILE}" ] ; then
        echo "Downloading Groovy"
        curl -sL -o "${GROOVY_DOWNLOAD_FILE}" "${GROOVY_DOWNLOAD_URL}"
    fi
    mkdir -p "${GROOVY_DIR}"
    tar -xzf "${GROOVY_DOWNLOAD_FILE}" -C "${GROOVY_DIR}"
fi

#echo "JAVACMD=${JAVACMD}"
export JAVACMD
export JAVA_OPTS='--add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED'

exec "${GROOVY_DIR}/groovy-2.5.2/bin/groovy" "$@"